<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<meta name="description" content="">
<meta name="author" content="">
<title>CRCE KYC</title>
<link rel="stylesheet" href="../public/css/bootstrap.min.css" type="text/css">
<link rel="stylesheet" href="../public/css/style.css" type="text/css">
<link rel="stylesheet" href="../public/css/sweet-alert.css" type="text/css">

<script>

var UserAddress="";
var Doc_Hash="";
var ipfs;
window.addEventListener('load', async () => {
	window.web3 = new Web3(new Web3.providers.HttpProvider('http://127.0.0.1:7545/'));
	UserAddress = '0xEDDC1aDFf5676cBa51aA67637a8b87Fbb58d483b';
	ipfs = window.IpfsHttpClient.create({ host: 'ipfs.infura.io', port: 5001 , protocol:'http'});
});


function AddUserDoc()
{
	var ABIString = document.getElementById("hdnContractABI").value; 
	ABIString = ABIString.replace(/'/g , "\"");
	ABIJSON = JSON.parse(ABIString);
	MyContract = new web3.eth.Contract(ABIJSON, "<%=ContractAddress%>", {
		from: UserAddress, // default from address
		gasPrice: '200' // default gas price in wei, 20 gwei in this case
	});

	var Doc_No = document.getElementById("txtLicenceNo").value;
	var Doc_Name = document.getElementById("txtFullName").value;
	var Doc_DOB = document.getElementById("txtDOB").value;
	var Doc_Address = document.getElementById("txtAddress").value;

	MyContract.methods.AddUserDoc(UserAddress,Doc_No,Doc_Name,Doc_DOB,Doc_Hash,Doc_Address)
	.send({
		from: UserAddress,
		gas: 4712388,
    	gasPrice: '200000'
	})
	.on('transactionHash', function(Doc_Hash){
		location.href="/Message?TransHash="+Doc_Hash
	})

}
function stringToByteArray(s){

// Otherwise, fall back to 7-bit ASCII only
var result = new Uint8Array(s.length);
for (var i=0; i<s.length; i++){
	result[i] = s.charCodeAt(i);/* w ww. ja  v  a 2s . co  m*/
}
return result;
}




function getDocHash()
{
	let reader = new FileReader();
	const invoicefile = document.getElementById("invoicefile");
	reader.readAsArrayBuffer(invoicefile.files[0]); // Read Provided File
	  
    reader.onloadend = async function() {
			//const ipfs = window.IpfsApi('127.0.0.1', 5001, {protocol: 'tcp'}) // Connect to IPFS
			const buf = buffer.Buffer(reader.result) // Convert data into buffer
			
			const fileAdded = await ipfs.add({path: 'Warren', content: buf})
			console.log(fileAdded)
			Doc_Hash = stringToByteArray(fileAdded.cid._baseCache.get('z'));
			console.log(Doc_Hash)
			AddUserDoc()
  
    }
}

</script>

</head>
<body id="page-top" class="bg-dark">
<nav id="mainNav" class="navbar navbar-default navbar-fixed-top">
<div class="container">
	<!-- Brand and toggle get grouped for better mobile display -->
	<div class="navbar-header">
		<button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
		<span class="sr-only">Toggle navigation</span>
		<span class="icon-bar"></span>
		<span class="icon-bar"></span>
		<span class="icon-bar"></span>
		</button>
		<img width=50px; height =50px src="../public/img/LOL.png">
	</div>
	
	<!-- Collect the nav links, forms, and other content for toggling -->
	<div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
		<ul class="nav navbar-nav navbar-right">
			<li>
				<a class="page-scroll" href="/">Home</a>
			</li>
		</ul>
	</div>
	<!-- /.navbar-collapse -->
	
</div>
<!-- /.container -->
</nav>

<form name="IntelitixForm" method="post">
<div class="container container_body">
	<div class="row">
		<div class="col-md-4 center-block">
			<div class="panel panel-info">
				<div class="panel-heading">
					<h3 class="panel-title">Add Identity Card Details</h3>
				</div>
				<div class="panel-body">

					<div class="form-group">
						<label class="control-label" for="txtLicenceNo">Identity No.</label>
						<input class="form-control" name="txtLicenceNo" id="txtLicenceNo" type="text" value="" placeholder="Identity No.">
					</div>
					<div class="form-group">
						<label class="control-label" for="txtFullName">Name as per Identity Card</label>
						<input class="form-control" name="txtFullName" id="txtFullName" type="text" value="" placeholder="Name">
					</div>
					<div class="form-group">
						<label class="control-label" for="txtDOB">DOB as per Identity Card</label>
						<input class="form-control" name="txtDOB" id="txtDOB" type="text" value="" placeholder="DD/MM/YYYY">
					</div>
					<div class="form-group">
						<label class="control-label" for="txtAddress">Address as per Identity Card</label>
						<textarea class="form-control" rows="4" name="txtAddress" id="txtAddress" placeholder="Address here ..."></textarea>
					</div>
					<div class="form-group">
						<label class="control-label" for="txtFinanceAmount">Attach Identity Card</label>
						<input type="file" name="invoicefile" id="invoicefile">
					</div>
					
					<div class="aligncenter">
						<button type="button" class="btn btnsm btn-primary" onClick="getDocHash()">Add Identity Card</button>
					</div>
				</div>
			</div>
		</div>
	</div>
	<br>
</div>

<input type="hidden" id="hdnContractABI" name="hdnContractABI" value="[{'constant':true,'inputs':[{'name':'UserAddress','type':'address'},{'name':'RequestIndex','type':'uint256'}],'name':'ViewDocRequestDetail','outputs':[{'name':'RequestedBy','type':'string'},{'name':'Doc_No','type':'uint256'},{'name':'Doc_Name','type':'uint256'},{'name':'Doc_DOB','type':'uint256'},{'name':'Doc_Hash','type':'uint256'},{'name':'Doc_Address','type':'uint256'},{'name':'Doc_OverAll_Status','type':'uint256'}],'payable':false,'stateMutability':'view','type':'function'},{'constant':false,'inputs':[{'name':'UserAddress','type':'address'},{'name':'FullName','type':'string'},{'name':'EmailID','type':'string'},{'name':'MobileNo','type':'uint256'}],'name':'AddUser','outputs':[],'payable':false,'stateMutability':'nonpayable','type':'function'},{'constant':true,'inputs':[{'name':'UserAddress','type':'address'}],'name':'ViewDocRequestLength','outputs':[{'name':'','type':'uint256'}],'payable':false,'stateMutability':'view','type':'function'},{'constant':false,'inputs':[{'name':'UserAddress','type':'address'},{'name':'Doc_No','type':'string'},{'name':'Doc_Name','type':'string'},{'name':'Doc_DOB','type':'string'},{'name':'Doc_Hash','type':'bytes'},{'name':'Doc_Address','type':'string'}],'name':'AddUserDoc','outputs':[],'payable':false,'stateMutability':'nonpayable','type':'function'},{'constant':true,'inputs':[{'name':'UserAddress','type':'address'},{'name':'RequestIndex','type':'uint256'}],'name':'viewUserDoc','outputs':[{'name':'Doc_No_S','type':'uint256'},{'name':'Doc_No_V','type':'string'},{'name':'Doc_Name_S','type':'uint256'},{'name':'Doc_Name_V','type':'string'},{'name':'Doc_DOB_S','type':'uint256'},{'name':'Doc_DOB_V','type':'string'},{'name':'Doc_Hash_S','type':'uint256'},{'name':'Doc_Hash_V','type':'bytes'},{'name':'Doc_Address_S','type':'uint256'},{'name':'Doc_Address_V','type':'string'}],'payable':false,'stateMutability':'view','type':'function'},{'constant':true,'inputs':[{'name':'UserAddress','type':'address'},{'name':'RequestIndex','type':'uint256'}],'name':'ViewDocRequestHeader','outputs':[{'name':'RequestedBy','type':'string'},{'name':'Doc_OverAll_Status','type':'uint256'}],'payable':false,'stateMutability':'view','type':'function'},{'constant':true,'inputs':[{'name':'UserAddress','type':'address'},{'name':'UserIndex','type':'uint256'}],'name':'viewUser','outputs':[{'name':'FullName','type':'string'},{'name':'EmailID','type':'string'},{'name':'MobileNo','type':'uint256'}],'payable':false,'stateMutability':'view','type':'function'},{'constant':false,'inputs':[{'name':'UserAddress','type':'address'},{'name':'RequestIndex','type':'uint256'},{'name':'Doc_No','type':'uint256'},{'name':'Doc_Name','type':'uint256'},{'name':'Doc_DOB','type':'uint256'},{'name':'Doc_Hash','type':'uint256'},{'name':'Doc_Address','type':'uint256'},{'name':'Doc_OverAll_Status','type':'uint256'}],'name':'UpdateRequestStatus','outputs':[],'payable':false,'stateMutability':'nonpayable','type':'function'},{'constant':false,'inputs':[{'name':'UserAddress','type':'address'},{'name':'RequestedBy','type':'string'},{'name':'Doc_No','type':'uint256'},{'name':'Doc_Name','type':'uint256'},{'name':'Doc_DOB','type':'uint256'},{'name':'Doc_Hash','type':'uint256'},{'name':'Doc_Address','type':'uint256'},{'name':'Doc_OverAll_Status','type':'uint256'}],'name':'AddDocRequest','outputs':[],'payable':false,'stateMutability':'nonpayable','type':'function'},{'inputs':[],'payable':false,'stateMutability':'nonpayable','type':'constructor'}]">

</form>

<div class="container">
	<div class="row">
		<div class="col-md-12 text-center">
			<div class="footer-copyright">
				&copy; 2022 Nerds
			</div>
		</div>
	</div>
</div>
</footer>

<script src="../public/js/buffer/buffer.js"></script>
<script src="../public/js/ipfsapi/index.js" integrity="sha384-5bXRcW9kyxxnSMbOoHzraqa7Z0PQWIao+cgeg327zit1hz5LZCEbIMx/LWKPReuB" crossorigin="anonymous"></script>

<script src="https://cdn.jsdelivr.net/npm/ipfs-http-client/dist/index.min.js"></script>
<script
  src="https://www.jsdelivr.com/package/npm/ipfs-http-client"
  integrity="sha384-5bXRcW9kyxxnSMbOoHzraqa7Z0PQWIao+cgeg327zit1hz5LZCEbIMx/LWKPReuB"
  crossorigin="anonymous"
></script>
<script src="https://cdn.jsdelivr.net/gh/ethereum/web3.js@1.0.0-beta.36/dist/web3.min.js" integrity="sha256-nWBTbvxhJgjslRyuAKJHK+XcZPlCnmIAAMixz6EefVk=" crossorigin="anonymous"></script>
<script src="../public/js/jquery.js"></script>
<script src="../public/js/bootstrap.min.js"></script>
<script src="../public/js/sweet-alert.min.js"></script>

</body>
</html>